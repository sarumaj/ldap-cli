name: test_and_report
on:
  push:
    branches:
      - main
    paths:
      - go.mod
      - go.sum
      - "cmd/**"
      - "pkg/**"
permissions:
  contents: write

jobs:
  test_and_report:
    strategy:
      fail-fast: false
      matrix:
        go: [1.21]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Test and report maintainability of ldap-cli
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pass keyring
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update && \
          sudo apt-get install -y gnupg2 pass && \
          mkdir -p ~/.gnupg && \
          {
          gpg --command-fd 0 --no-tty --batch --gen-key << EOF
            %echo Generating a basic OpenPGP key
            Key-Type: RSA
            Key-Length: 2048
            Subkey-Type: RSA
            Subkey-Length: 2048
            Name-Real: TestUser
            Name-Email: user@example.com
            Expire-Date: 0
            %no-ask-passphrase
            %no-protection
            %pubring pubring.gpg
            %secring  secring.gpg
            %commit
            %echo done
          EOF
          } && \
          pass init "TestUser"
          
      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Install go tools
        run: |
          go install golang.org/x/tools/gopls@latest && \
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
          go install github.com/axw/gocov/gocov@latest

      - name: Run linters
        run: gofmt -s -d ./ && golangci-lint run -v
        
      - name: Setup openldap mock-up
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./oat/docker-compose.yml"

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          TEST_OAT: "true"
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPORTER_ID }}
        with:
          coverageCommand: gocov test ./... -coverprofile=c.out
          coverageLocations: ./c.out:gocov
          debug: true
          prefix: github.com/${{ github.repository }}
